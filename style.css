/* ===== CSS変数の定義 ===== */
:root {
    --main-text-color: #324454; /* 濃いグレー */
    --link-color: #526D82;
    --link-hover-color: #4682B4;
    --active-link-bg-color: #4682B4;
    --active-link-text-color: #fff;
    --light-blue-gray: #d8dbe0; /* 実際の色の値 */
    --very-light-blue-gray: #f0f4f8;
    --heading-bg-color: #e6e9ed;
    --border-color: #94a9b8;
    --font-family-montserrat: "Montserrat", sans-serif;
    --font-family-noto-sans-jp: "Noto Sans JP", sans-serif;

    --unified-color: var(--light-blue-gray); /* ボタン背景色として使われる変数 */

    --button-primary-bg: var(--unified-color);
    --button-secondary-bg: var(--unified-color);
    --button-info-bg: var(--unified-color);
    --button-text-color: var(--main-text-color); /* テキスト/アイコン色を濃いグレーに */
}

/* ===== ページ全体のベース設定 ===== */
body {
    margin: 0;
    padding: 0;
    /* background-color: var(--unified-color); */ /* ← 変更 */
    background-color: #f8f9fa; /* ★ body の背景をプレビューと同じ色に */
    font-family: var(--font-family-noto-sans-jp);
    display: flex;
    flex-direction: column;
    height: 100vh; /* Fallback */
    height: 100dvh; /* Dynamic viewport height */
    box-sizing: border-box;
    padding-top: 50px; /* ヘッダー高さ */
    padding-bottom: 60px; /* ★ フッター高さに合わせて 60px に変更 */
}

/* ===== ヘッダー ===== */
#main-header {
    position: fixed; /* 上部に固定 */
    top: 0;
    left: 0;
    width: 100%;
    background-color: var(--unified-color); /* ヘッダー背景色を変更 */
    height: 50px; /* ヘッダー高さ */
    display: flex;
    justify-content: space-between; /* ロゴとコントロール（あれば）を両端に */
    align-items: center;
    padding: 0 10px;
    z-index: 20; /* ボタンコンテナより上に */
    box-sizing: border-box;
}

#main-header .logo {
    display: flex;
    align-items: center;
}

#main-header .header-image {
    width: 35px;
    height: 35px;
    /* 必要ならマージン調整 */
     margin-right: 10px;
}

#main-header .title {
    font-family: var(--font-family-montserrat);
    color: var(--button-text-color); /* テキスト色を濃いグレーに */
    /* margin-left: 10px; */ /* 画像とのマージンは画像側で調整 */
    font-size: 1.3rem;
}

/* カメラ/画像表示エリア (プレビューと重なるように調整) */
#camera,
#captured-image {
    position: absolute; /* プレビューと重ねるため */
    top: 50px; /* ヘッダーの下 */
    left: 0;
    width: 100%;
    /* ★ 高さをフッター60pxに合わせて再計算 */
    height: calc(100dvh - 50px - 60px);
    object-fit: cover;
    z-index: 1; /* プレビューより奥 */
}
/* capture-image も同様に position: absolute; を設定 */
#captured-image {
     z-index: 2; /* カメラより手前、プレビューより奥 */
     /* 必要に応じて他のスタイル調整 */
}

/* ボタンのコンテナ */
.button-container {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    padding: 5px 0; /* パディング微調整 */
    display: flex;
    justify-content: center; /* 中央揃え */
    align-items: center;
    background: rgba(0,0,0,0.8); /* ここはボタンコンテナ自体の背景 */
    z-index: 10;
    height: 60px; /* ★ 高さを 60px に変更 */
    box-sizing: border-box;
    gap: 35px; /* ★ 間隔を少し調整 (例: 35px) */
}

/* 共通ボタン スタイル */
#capture-button,
#preview-upload-button
/* #upload-queue-button 削除 */
{
    width: 50px; /* ★ サイズを大きく変更 */
    height: 50px; /* ★ サイズを大きく変更 */
    border-radius: 50%;
    border: none;
    outline: none;
    color: var(--button-text-color);
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1.6rem; /* ★ アイコンサイズも大きく */
    padding: 0;
    margin: 0;
    background-color: var(--unified-color);
    position: relative;
}

/* 枚数表示バッジのスタイル (位置を少し調整) */
#photo-count-badge {
    position: absolute;
    top: -4px; /* ★ 位置調整 */
    right: -4px; /* ★ 位置調整 */
    background-color: #dc3545;
    color: white;
    border-radius: 50%;
    padding: 2px 5px; /* パディング微調整 */
    font-size: 0.7rem;
    line-height: 1;
    min-width: 16px; /* サイズ微調整 */
    text-align: center;
    box-shadow: 0 0 2px rgba(0,0,0,0.5);
    display: none; /* 初期は非表示 (JSで制御) */
}

/* canvasは非表示のまま */
#canvas {
    display: none;
}

/* ★★★ プレビューコンテナのスタイル ★★★ */
#upload-preview-container {
    position: absolute;
    top: 50px; /* ヘッダーの下 */
    left: 0;
    width: 100%;
    /* ★ 最大高さをフッター60pxに合わせて再計算 */
    max-height: calc(100dvh - 50px - 60px);
    background-color: #f8f9fa; /* bodyと同じ色なので透明でも良いが見た目上はこのまま */
    padding: 30px 10px 10px 10px;
    box-sizing: border-box;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    column-gap: 8px;
    row-gap: 20px;
    align-items: start;
    overflow-y: auto;
    z-index: 3;
}

/* ★ プレビューコンテナ内の画像ラッパー */
.preview-image-wrapper {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    /* align-self: start; */ /* コンテナ側で設定したので不要 */
}

/* プレビューコンテナ内の画像スタイル */
#upload-preview-container img {
    width: 100%; /* グリッドカラムの幅に合わせる */
    max-width: 100px; /* ★ 最大幅を約100pxに制限 (グリッドの gap も考慮) */
    height: auto; /* 縦横比維持 */
    object-fit: contain;
    display: block;
    border: 1px solid #ddd;
    box-sizing: border-box;
    background-color: #eee;
    /* justify-self: center; は wrapper に移動したので削除 or コメントアウト */
}

/* ★ 画像削除ボタンのスタイル (グレー地に白バツ) */
.delete-preview-image {
    position: absolute;
    top: -5px;
    right: -5px;
    width: 24px;
    height: 24px;
    /* background-color: #dc3545; */ /* ← 赤背景をやめる */
    background-color: #6c757d; /* ★ 背景をグレーに戻す */
    color: white; /* ★ アイコンの色は白のまま */
    border: none;
    outline: none;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1rem; /* アイコンサイズ */
    line-height: 1;
    padding: 0;
    z-index: 5;
    transition: background-color 0.2s ease;
}
.delete-preview-image:hover {
    /* background-color: #c82333; */ /* ← ホバー背景変更 */
    background-color: #5a6268; /* ★ ホバー時に少し濃いグレー背景に */
    color: white; /* 白いアイコンは維持 */
}
.delete-preview-image i {
    pointer-events: none;
}

/* 進捗表示テキストのスタイル */
#upload-progress-text {
    position: sticky; /* スクロールしても上部に固定 */
    top: 0;
    left: 0; /* コンテナ幅に広げるため */
    grid-column: 1 / -1; /* 全カラム幅を占有 (変更なし) */
    background-color: rgba(255, 255, 255, 0.9); /* 半透明背景 */
    padding: 8px;
    text-align: center;
    font-size: 0.9rem;
    font-weight: bold;
    color: #333;
    z-index: 4;
    margin-bottom: 8px; /* グリッドの gap とは別にマージン調整 */
}
/* ★★★★★★★★★★★★★★★★★★★ */

/* ★ プレビュー画面内のアクションボタンコンテナ */
/* .preview-actions { ... } */

/* ★ プレビュー画面内のボタン共通スタイル */
/* .preview-actions button { ... } */
/* .preview-actions button i { ... } */

/* キャンセルボタン */
/* #cancel-preview-button { ... } */

/* アップロード実行ボタン */
/* #google-upload-button { ... } (プレビュー内ボタンのスタイル) */
/* #google-upload-button.uploading { ... } (プレビュー内ボタンのスタイル) */

/* iPhone SE (初代) 幅375px 向けの微調整 */
@media (max-width: 375px) {
    #main-header {
        height: 40px; /* ヘッダー高さは 40px のまま */
    }
    #main-header .title {
        font-size: 1.1rem; /* タイトルも少し小さく */
    }
    #main-header .header-image {
        width: 25px;
        height: 25px;
    }

    .button-container {
        height: 60px; /* ★ 小画面でもフッター高さを 60px に（必要なら調整） */
        padding: 5px 0;
        gap: 30px; /* ★ 間隔調整 */
    }
    #capture-button,
    #preview-upload-button
    {
        width: 45px; /* ★ サイズ調整 (60pxフッターに合わせて) */
        height: 45px;
        font-size: 1.5rem; /* ★ アイコンサイズ調整 */
    }
     #photo-count-badge {
        top: -3px; /* ★ 位置調整 */
        right: -3px;
        padding: 1px 4px;
        font-size: 0.65rem; /* 少し小さく */
        min-width: 15px;
     }

    body {
        /* レスポンシブでも body 背景色は #f8f9fa のまま */
        padding-top: 40px; /* ヘッダー高さ */
        padding-bottom: 60px; /* ★ フッター高さに合わせて 60px に変更 */
    }
    #camera,
    #captured-image,
    #upload-preview-container {
        top: 40px; /* ヘッダー高さ */
        /* ★ 高さをフッター60pxに合わせて再計算 */
        max-height: calc(100dvh - 40px - 60px);
        /* #camera, #captured-image にも height を設定する場合 */
        height: calc(100dvh - 40px - 60px);
    }
    #upload-preview-container {
        column-gap: 5px;
        row-gap: 15px;
        /* align-items: start; は継承される */
    }
    #upload-preview-container img {
        max-width: 90px;
    }
    /* ★ レスポンシブ内のプレビューアクションボタンスタイル削除 */
    /* .preview-actions button { ... } */
    /* .preview-actions button i { ... } */
    .delete-preview-image {
        width: 20px;
        height: 20px;
        font-size: 1.3em; /* アイコンサイズ */
        top: -9px;
        right: 3px;
    }
} 

/* スピナーアニメーション */
.spinner {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
} 